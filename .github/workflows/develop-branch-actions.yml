name: Python Package

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  test-release-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[test]

    - name: Run pre-commit checks
      run: |
        # Run all pre-commit checks, fail if there are any issues.
        pre-commit run -a

    - name: Test with pytest
      run: |
        coverage run -m pytest
        coverage report --fail-under 40

    - name: Update Package Version
      run: |
        python version.py -v 0.0.0-rc${{ github.run_id }}

    - name: Check Package Build
      run: |
        python -m pip install build
        python -m build

    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists-candidate
        path: dist/

  test-pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - test-release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    environment:
      name: testpypi
      url: https://test.pypi.org/p/deepnado

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists-candidate
          path: dist/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
